(()=>{"use strict";function e(e,t,n){const s=document.querySelector(".canvas"),i=s.getContext("2d");i.fillStyle=0===n?"rgba(100, 100, 100, 0)":"rgba(100, 100, 100, 0.7)",i.fillRect(6+e,6+t,(s.width-30)/4,(s.height-30)/4),n<10&&0!==n?300===s.width?(i.font="45px Arial",i.fillStyle="white",i.fillText(n,e+26,t+55)):500===s.width?(i.font="55px Arial",i.fillStyle="white",i.fillText(n,e+48,t+85)):(i.font="60px Arial",i.fillStyle="white",i.fillText(n,e+58,t+95)):n>=10&&(300===s.width?(i.font="45px Arial",i.fillStyle="white",i.fillText(n,e+13,t+55)):500===s.width?(i.font="55px Arial",i.fillStyle="white",i.fillText(n,e+27,t+85)):(i.font="60px Arial",i.fillStyle="white",i.fillText(n,e+37,t+95)))}function t(t,n){const s=document.querySelector(".canvas");switch(s.getContext("2d"),t){case 1:e((s.width-30)/4+6,0,n);break;case 2:e((s.width-30)/4*2+12,0,n);break;case 3:e((s.width-30)/4*3+18,0,n);break;case 4:e(0,(s.width-30)/4+6,n);break;case 5:e((s.width-30)/4+6,(s.width-30)/4+6,n);break;case 6:e((s.width-30)/4*2+12,(s.width-30)/4+6,n);break;case 7:e((s.width-30)/4*3+18,(s.width-30)/4+6,n);break;case 8:e(0,(s.width-30)/4*2+12,n);break;case 9:e((s.width-30)/4+6,(s.width-30)/4*2+12,n);break;case 10:e((s.width-30)/4*2+12,(s.width-30)/4*2+12,n);break;case 11:e((s.width-30)/4*3+18,(s.width-30)/4*2+12,n);break;case 12:e(0,(s.width-30)/4*3+18,n);break;case 13:e((s.width-30)/4+6,(s.width-30)/4*3+18,n);break;case 14:e((s.width-30)/4*2+12,(s.width-30)/4*3+18,n);break;case 15:e((s.width-30)/4*3+18,(s.width-30)/4*3+18,n);break;case 0:e(0,0,n)}}const n=function(e){const n=document.querySelector(".canvas"),s=n.getContext("2d");function i(e){const t=[];let n=[];for(let t=0;t<4;t+=1)n.push(e[t]);t.push(n),n=[];for(let t=4;t<8;t+=1)n.push(e[t]);t.push(n),n=[];for(let t=8;t<12;t+=1)n.push(e[t]);t.push(n),n=[];for(let t=12;t<16;t+=1)n.push(e[t]);return t.push(n),t}const a=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0];for(let r=0;r<e;r+=1)setTimeout((()=>{const e=Math.random(),r=a.indexOf(0);e<.25?(a[r-4]&&(a[r]=a[r-4],a[r-4]=0),i(a)):e>=.25&&e<.5?(a[r+4]&&(a[r]=a[r+4],a[r+4]=0),i(a)):e>=.5&&e<.75?(a[r+1]&&a[r+1]!==i(a)[0][0]&&a[r+1]!==i(a)[1][0]&&a[r+1]!==i(a)[2][0]&&a[r+1]!==i(a)[3][0]&&(a[r]=a[r+1],a[r+1]=0),i(a)):e>=.75&&(a[r-1]&&a[r-1]!==i(a)[0][3]&&a[r-1]!==i(a)[1][3]&&a[r-1]!==i(a)[2][3]&&a[r-1]!==i(a)[3][3]&&(a[r]=a[r-1],a[r-1]=0),i(a)),s.clearRect(0,0,n.width,n.height),a.forEach(((e,n)=>t(n,e)))}),50);return a},s=function(e){const t=new Audio;return t.src=e,t.volume=.1,t.play(),t},i=function(e,t){const n=t,s=Math.sqrt(n.length);function i(e){const t=[];for(let n=0;n<e.length;n+=s){const i=[];for(let t=n;t<n+s;t+=1)i.push(e[t]);t.push(i)}return t}for(let t=0;t<e;t+=1){const e=Math.random(),t=n.indexOf(0);e<.25?(n[t-s]&&(n[t]=n[t-s],n[t-s]=0),i(n)):e>=.25&&e<.5?(n[t+s]&&(n[t]=n[t+s],n[t+s]=0),i(n)):e>=.5&&e<.75?(n[t+1]&&n[t+1]!==i(n)[0][0]&&n[t+1]!==i(n)[1][0]&&n[t+1]!==i(n)[2][0]&&(n[t]=n[t+1],n[t+1]=0),i(n)):e>=.75&&(n[t-1]&&n[t-1]!==i(n)[0][3]&&n[t-1]!==i(n)[1][3]&&n[t-1]!==i(n)[2][3]&&(n[t]=n[t-1],n[t-1]=0),i(n))}return n},a="winners-table-sharp13",r=function(e){const t=document.createElement("div");return t.classList.add("game-field"),window.screen.width>1400?(t.style.width="600px",t.style.height="600px"):window.screen.width>600&&window.screen.width<1400?(t.style.width="500px",t.style.height="500px"):(t.style.width="300px",t.style.height="300px"),e.forEach(((n,s)=>{const i=document.createElement("button");i.setAttribute("data-matrix-id",s),i.classList.add("square"),i.textContent=s,i.style.width=100/Math.sqrt(e.length)+"%",i.style.height=100/Math.sqrt(e.length)+"%",t.append(i)})),t},o=function(e){const t=[],n=Math.sqrt(e.length);for(let s=0;s<e.length;s+=n){const i=[];for(let t=s;t<s+n;t+=1)i.push(e[t]);t.push(i)}return t};function c(e,t,n){const s=e;e&&(s.style.transform=`translate3D(${100*t}%, ${100*n}%, 0)`,"0"===e.getAttribute("data-matrix-id")&&(s.style.display="none"))}function d(e){const t=Array.from(document.querySelectorAll(".square"));for(let n=0;n<e.length;n+=1)for(let s=0;s<e[n].length;s+=1)c(t[e[n][s]],s,n)}const l=function(e,t){for(let n=0;n<t.length;n+=1)for(let s=0;s<t[n].length;s+=1)if(t[n][s]===e)return{x:s,y:n}},u=function(e,t){if((e.x-1===t.x||e.x+1===t.x||e.x===t.x)&&(e.y-1===t.y||e.y+1===t.y||e.y===t.y)&&e.x===t.x&&e.y-1===t.y||e.x===t.x&&e.y+1===t.y||e.y===t.y&&e.x+1===t.x||e.y===t.y&&e.x-1===t.x)return!0},h=function(e,t,n){const s=n,i=n[e.y][e.x];s[e.y][e.x]=s[t.y][t.x],s[t.y][t.x]=i},m=new Array(9).fill(0).map(((e,t)=>t)).slice(1);m.push(0);const w=new Array(25).fill().map(((e,t)=>t)).slice(1);w.push(0);const f=new Array(36).fill().map(((e,t)=>t)).slice(1);f.push(0);const p=new Array(49).fill().map(((e,t)=>t)).slice(1);p.push(0);const g=new Array(64).fill().map(((e,t)=>t)).slice(1);g.push(0);const b=function(e){const t=[];for(let n=0;n<e.length;n+=1)for(let s=0;s<e.length;s+=1)t.push(e[n][s]);return t};document.body.append(function(){const e=document.createElement("header");e.classList.add("header");const t=document.createElement("div");t.classList.add("header__buttons-raw","buttons-raw");const n=document.createElement("button");n.classList.add("buttons-raw__button-new-game","button"),n.innerText="Hard game";const s=document.createElement("button");s.classList.add("buttons-raw__button-new-game-easy","button"),s.innerText="Easy game";const i=document.createElement("div");i.classList.add("buttons-raw__new-games-block");const a=document.createElement("button");a.classList.add("buttons-raw__button-stop-game","button"),a.innerText="Stop";const r=document.createElement("div");r.classList.add("buttons-raw__save-games-block");const o=document.createElement("button");o.classList.add("buttons-raw__button-save-game","button"),o.innerText="Save game";const c=document.createElement("button");c.classList.add("buttons-raw__button-load-game","button"),c.innerText="Load game";const d=document.createElement("button");d.classList.add("buttons-raw__button-results","button"),d.innerText="Show results",i.append(n),i.append(s),t.append(i),t.append(a),t.append(d),r.append(o),r.append(c),t.append(r);const l=document.createElement("div");l.classList.add("header__times-raw","times-raw");const u=document.createElement("span");u.classList.add("times-raw__span-title"),u.innerText="Moves: ";const h=document.createElement("div");h.classList.add("times-raw__moves"),h.innerText="0",u.append(h);const m=document.createElement("span");m.classList.add("times-raw__span-title"),m.innerText="Time: ";const w=document.createElement("div");return w.classList.add("times-raw__time"),w.innerText="00:00",m.append(w),l.append(u),l.append(m),e.append(t),e.append(l),e}());const x=document.createElement("main");x.classList.add("main"),document.body.append(x),document.body.append(function(){const e=document.createElement("footer");e.classList.add("footer");const t=document.createElement("button");t.classList.add("volume"),e.append(t);const n=document.createElement("button");n.classList.add("size3","button"),n.innerText="4x4",e.append(n);const s=document.createElement("a");s.href="https://github.com/ShArPman13";const i=document.createElement("img");i.classList.add("git"),i.src="./git_white.svg",i.url="www.mail.ru",i.alt="git-logo",s.append(i),e.append(s);const a=document.createElement("a");a.href="https://rs.school";const r=document.createElement("img");return r.classList.add("rss"),r.src="./rss_white.svg",a.append(r),e.append(a),e}()),document.body.append(function(){const e=document.createElement("div");return e.classList.add("pop-up"),e.classList.add("hidden"),e}()),document.body.append(function(){const e=document.createElement("div");return e.classList.add("pop-up-result"),e.classList.add("hidden"),e}());const y=document.querySelector(".pop-up"),S=document.querySelector(".pop-up-result"),L=document.querySelector(".volume");L.addEventListener("click",(()=>{L.classList.toggle("mute")}));const T=document.createElement("canvas");T.classList.add("canvas"),window.screen.width>1400?(T.width=600,T.height=600):window.screen.width>600&&window.screen.width<1400?(T.width=500,T.height=500):(T.width=300,T.height=300),T.innerText="Please use modern browser! =)",x.append(T);const v=T.getContext("2d"),k=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0];let _,N,E=JSON.parse(localStorage.getItem(a))||[],O=n(1e3),J=0;const C=document.querySelector(".times-raw__time");function R(e){let t;return e<(T.width-30)/4+6&&(t=1),e>=(T.width-30)/4+6&&e<(T.width-30)/4*2+12&&(t=2),e>=(T.width-30)/4*2+12&&e<(T.width-30)/4*3+18&&(t=3),e>=(T.width-30)/4*3+18&&(t=4),t}function A(e){let t,n;const s=[];switch(e){case 1:t=(T.width-30)/4+6,n=0,s.push(t),s.push(n);break;case 2:t=(T.width-30)/4*2+12,n=0,s.push(t),s.push(n);break;case 3:t=(T.width-30)/4*3+18,n=0,s.push(t),s.push(n);break;case 4:t=0,n=(T.width-30)/4+6,s.push(t),s.push(n);break;case 5:t=(T.width-30)/4+6,n=(T.width-30)/4+6,s.push(t),s.push(n);break;case 6:t=(T.width-30)/4*2+12,n=(T.width-30)/4+6,s.push(t),s.push(n);break;case 7:t=(T.width-30)/4*3+18,n=(T.width-30)/4+6,s.push(t),s.push(n);break;case 8:t=0,n=(T.width-30)/4*2+12,s.push(t),s.push(n);break;case 9:t=(T.width-30)/4+6,n=(T.width-30)/4*2+12,s.push(t),s.push(n);break;case 10:t=(T.width-30)/4*2+12,n=(T.width-30)/4*2+12,s.push(t),s.push(n);break;case 11:t=(T.width-30)/4*3+18,n=(T.width-30)/4*2+12,s.push(t),s.push(n);break;case 12:t=0,n=(T.width-30)/4*3+18,s.push(t),s.push(n);break;case 13:t=(T.width-30)/4+6,n=(T.width-30)/4*3+18,s.push(t),s.push(n);break;case 14:t=(T.width-30)/4*2+12,n=(T.width-30)/4*3+18,s.push(t),s.push(n);break;case 15:t=(T.width-30)/4*3+18,n=(T.width-30)/4*3+18,s.push(t),s.push(n);break;case 0:t=0,n=0,s.push(t),s.push(n)}return s}O.forEach(((e,n)=>t(n,e)));const M=T.getBoundingClientRect(),q=M.left,H=M.top;let z,$,Y,I=!1,D=[];function X(e,n,s,i){const a=e,r=n;let o=e,c=n;requestAnimationFrame((function e(){v.beginPath(),v.clearRect(0,0,T.width,T.height);for(let e=0;e<=15;e+=1)O[e]===i&&(e+=1),t(e,O[e]);v.fillStyle="rgba(100, 100, 100, 0.7)",v.fillRect(o+6,c+6,(T.width-30)/4,(T.width-30)/4),i<10&&0!==i?300===T.width?(v.font="45px Arial",v.fillStyle="white",v.fillText(i,o+26,c+55)):500===T.width?(v.font="55px Arial",v.fillStyle="white",v.fillText(i,o+48,c+85)):(v.font="60px Arial",v.fillStyle="white",v.fillText(i,o+58,c+95)):i>=10&&(300===T.width?(v.font="45px Arial",v.fillStyle="white",v.fillText(i,o+13,c+55)):500===T.width?(v.font="55px Arial",v.fillStyle="white",v.fillText(i,o+27,c+85)):(v.font="60px Arial",v.fillStyle="white",v.fillText(i,o+37,c+95))),"up"===s&&(c-=3.5),"down"===s&&(c+=3.5),"right"===s&&(o+=3.5),"left"===s&&(o-=3.5);const n=requestAnimationFrame(e);(o>a+(T.width-30)/4+6||o<a-(T.width-30)/4-6)&&cancelAnimationFrame(n),(c>r+(T.width-30)/4+6||c<r-(T.width-30)/4-6)&&cancelAnimationFrame(n)}))}function P(e,t,n){switch(e){case 1:v.clearRect((T.width-30)/4+6,0,124,124),X((T.width-30)/4+6,0,t,n);break;case 2:v.clearRect((T.width-30)/4*2+12,0,124,124),X((T.width-30)/4*2+12,0,t,n);break;case 3:v.clearRect((T.width-30)/4*3+18,0,124,124),X((T.width-30)/4*3+18,0,t,n);break;case 4:v.clearRect(0,(T.width-30)/4+6,124,124),X(0,(T.width-30)/4+6,t,n);break;case 5:v.clearRect((T.width-30)/4+6,(T.width-30)/4+6,124,124),X((T.width-30)/4+6,(T.width-30)/4+6,t,n);break;case 6:v.clearRect((T.width-30)/4*2+12,(T.width-30)/4+6,124,124),X((T.width-30)/4*2+12,(T.width-30)/4+6,t,n);break;case 7:v.clearRect((T.width-30)/4*3+18,(T.width-30)/4+6,124,124),X((T.width-30)/4*3+18,(T.width-30)/4+6,t,n);break;case 8:v.clearRect(0,(T.width-30)/4*2+12,124,124),X(0,(T.width-30)/4*2+12,t,n);break;case 9:v.clearRect((T.width-30)/4+6,(T.width-30)/4*2+12,124,124),X((T.width-30)/4+6,(T.width-30)/4*2+12,t,n);break;case 10:v.clearRect((T.width-30)/4*2+12,(T.width-30)/4*2+12,124,124),X((T.width-30)/4*2+12,(T.width-30)/4*2+12,t,n);break;case 11:v.clearRect((T.width-30)/4*3+18,(T.width-30)/4*2+12,124,124),X((T.width-30)/4*3+18,(T.width-30)/4*2+12,t,n);break;case 12:v.clearRect(0,(T.width-30)/4*3+18,124,124),X(0,(T.width-30)/4*3+18,t,n);break;case 13:v.clearRect((T.width-30)/4+6,(T.width-30)/4*3+18,124,124),X((T.width-30)/4+6,(T.width-30)/4*3+18,t,n);break;case 14:v.clearRect((T.width-30)/4*2+12,(T.width-30)/4*3+18,124,124),X((T.width-30)/4*2+12,(T.width-30)/4*3+18,t,n);break;case 15:v.clearRect((T.width-30)/4*3+18,(T.width-30)/4*3+18,124,124),X((T.width-30)/4*3+18,(T.width-30)/4*3+18,t,n);break;default:v.clearRect(0,0,124,124),X(0,0,t,n)}}T.addEventListener("mousedown",(e=>{e.preventDefault(),e.stopPropagation(),N=new Date;const t=Math.floor(e.clientX-q),n=Math.floor(e.clientY-H);I=!1;for(let e=0;e<O.length;e+=1)D.push({isDragging:!1,num:O[e],xCoord:A(e)[0]+6,yCoord:A(e)[1]+6,widthRect:(T.width-30)/4});for(let e=0;e<D.length;e+=1){const s=D[e];t>s.xCoord&&t<s.xCoord+s.widthRect&&n>s.yCoord&&n<s.yCoord+s.widthRect&&(I=!0,s.isDragging=!0)}let s;if(z=t,$=n,e.offsetY<(T.width-30)/4+6)switch(R(e.offsetX)){case 1:s=0;break;case 2:s=1;break;case 3:s=2;break;default:s=3}if(e.offsetY>=(T.width-30)/4+6&&e.offsetY<(T.width-30)/4*2+12)switch(R(e.offsetX)){case 1:s=4;break;case 2:s=5;break;case 3:s=6;break;default:s=7}if(e.offsetY>=(T.width-30)/4*2+12&&e.offsetY<(T.width-30)/4*3+18)switch(R(e.offsetX)){case 1:s=8;break;case 2:s=9;break;case 3:s=10;break;default:s=11}if(e.offsetY>(T.width-30)/4*3+18)switch(R(e.offsetX)){case 1:s=12;break;case 2:s=13;break;case 3:s=14;break;default:s=15}_=s})),T.addEventListener("mouseup",(e=>{e.preventDefault(),e.stopPropagation(),I=!1;for(let e=0;e<D.length;e+=1)D[e].isDragging=!1;v.clearRect(0,0,T.width,T.height),O.forEach(((e,n)=>t(n,e))),D[_-4]&&$<D[_-4].yCoord+D[_-4].widthRect&&$>D[_-4].yCoord&&z<D[_-4].xCoord+1.5*D[_-4].widthRect&&z>D[_-4].xCoord-D[_-4].widthRect/2&&0===O[_-4]&&(O[_-4]=O[_],O[_]=0,L.classList.contains("mute")||s("./Sound_005.wav"),J+=1,F.innerText=J),D[_+4]&&$<D[_+4].yCoord+D[_+4].widthRect&&$>D[_+4].yCoord&&z<D[_+4].xCoord+1.5*D[_+4].widthRect&&z>D[_+4].xCoord-D[_+4].widthRect/2&&0===O[_+4]&&(O[_+4]=O[_],O[_]=0,L.classList.contains("mute")||s("./Sound_005.wav"),J+=1,F.innerText=J),D[_-1]&&z>D[_-1].xCoord-D[_-1].widthRect&&z<D[_-1].xCoord+D[_-1].widthRect&&$<D[_-1].yCoord+1.5*D[_-1].widthRect&&$>D[_-1].yCoord-D[_-1].widthRect/2&&0===O[_-1]&&(O[_-1]=O[_],O[_]=0,L.classList.contains("mute")||s("./Sound_001.wav"),J+=1,F.innerText=J),D[_+1]&&z>D[_+1].xCoord&&z<D[_+1].xCoord+1.5*D[_+1].widthRect&&$<D[_+1].yCoord+1.5*D[_+1].widthRect&&$>D[_+1].yCoord-D[_+1].widthRect/2&&0===O[_+1]&&(O[_+1]=O[_],O[_]=0,L.classList.contains("mute")||s("./Sound_001.wav"),J+=1,F.innerText=J),D=[],v.clearRect(0,0,T.width,T.height),O.forEach(((e,n)=>t(n,e))),JSON.stringify(O)===JSON.stringify(k)&&(console.log("win"),setTimeout((()=>{y.classList.remove("hidden"),clearTimeout(Y),setTimeout((()=>{y.innerHTML=`Hooray!<br> You solved the puzzle<br> in<br> ${C.textContent} and ${J} moves!`}),500),L.classList.contains("mute")||s("./Sound_025.wav")}),300))})),T.addEventListener("mousemove",(n=>{n.stopPropagation(),n.preventDefault();const s=Math.floor(n.clientX-q),i=Math.floor(n.clientY-H),a=s-z,r=i-$;for(let e=0;e<D.length;e+=1){const t=D[e];t.isDragging&&(t.xCoord+=a,t.yCoord+=r)}for(let n=0;n<D.length;n+=1){const s=D[n];if(s.isDragging){v.clearRect(0,0,T.width,T.height),e(s.xCoord,s.yCoord,s.num);for(let e=0;e<=15;e+=1)e===n&&(e+=1),t(e,O[e])}}z=s,$=i}));const F=document.querySelector(".times-raw__moves");function B(e=0,t=0){let n=e,s=t;!function e(){Y=setTimeout((()=>{n+=1,n>=60&&(n=0,s+=1),C.textContent=n>=10?`0${s}:${n}`:`0${s}:0${n}`,e()}),1e3)}()}T.addEventListener("click",(e=>{if(e.preventDefault(),new Date-N<150){let n;if(e.offsetY<(T.width-30)/4+6)switch(R(e.offsetX)){case 1:n=0;break;case 2:n=1;break;case 3:n=2;break;default:n=3}if(e.offsetY>=(T.width-30)/4+6&&e.offsetY<(T.width-30)/4*2+12)switch(R(e.offsetX)){case 1:n=4;break;case 2:n=5;break;case 3:n=6;break;default:n=7}if(e.offsetY>=(T.width-30)/4*2+12&&e.offsetY<(T.width-30)/4*3+18)switch(R(e.offsetX)){case 1:n=8;break;case 2:n=9;break;case 3:n=10;break;default:n=11}if(e.offsetY>(T.width-30)/4*3+18)switch(R(e.offsetX)){case 1:n=12;break;case 2:n=13;break;case 3:n=14;break;default:n=15}_=n;const i=O[n];0===O[n-4]?(O[n-4]=O[n],O[n]=0,P(n,"up",i),setTimeout((()=>{v.clearRect(0,0,T.width,T.height);for(let e=0;e<=15;e+=1)t(e,O[e])}),200),L.classList.contains("mute")||s("./Sound_005.wav"),J+=1,F.innerText=J):0===O[n+4]?(O[n+4]=O[n],O[n]=0,P(n,"down",i),setTimeout((()=>{v.clearRect(0,0,T.width,T.height);for(let e=0;e<=15;e+=1)t(e,O[e])}),200),L.classList.contains("mute")||s("./Sound_005.wav"),J+=1,F.innerText=J):0===O[n-1]&&1!==R(e.offsetX)?(O[n-1]=O[n],O[n]=0,P(n,"left",i),setTimeout((()=>{v.clearRect(0,0,T.width,T.height);for(let e=0;e<=15;e+=1)t(e,O[e])}),200),L.classList.contains("mute")||s("./Sound_001.wav"),J+=1,F.innerText=J):0===O[n+1]&&4!==R(e.offsetX)&&(O[n+1]=O[n],O[n]=0,P(n,"right",i),setTimeout((()=>{v.clearRect(0,0,T.width,T.height);for(let e=0;e<=15;e+=1)t(e,O[e])}),200),L.classList.contains("mute")||s("./Sound_001.wav"),J+=1,F.innerText=J);let r=1;localStorage.getItem("count-winners")&&(r=JSON.parse(localStorage.getItem("count-winners"))),JSON.stringify(O)===JSON.stringify(k)&&(E.push([J,C.textContent,r]),r+=1,localStorage.setItem("count-winners",JSON.stringify(r)),localStorage.setItem(a,JSON.stringify(E)),setTimeout((()=>{y.classList.remove("hidden"),clearTimeout(Y),setTimeout((()=>{y.innerHTML=`Hooray!<br> You solved the puzzle<br> in<br> ${C.textContent} and ${J} moves!`}),500),L.classList.contains("mute")||s("./Sound_025.wav")}),300))}})),B();const j=document.querySelector(".size3");let G=[],K=[];y.addEventListener("click",(()=>{if(y.innerHTML="",y.classList.add("hidden"),C.innerText="00:00",B(),J=0,F.innerText=J,"4x4"===j.innerText)O=n(1e3),localStorage.setItem(a,JSON.stringify(E));else{i(1e3,G),x.innerHTML="";const e=o(G);x.append(r(G)),d(e),alert("Statistics are updated only on the field 4x4")}})),S.addEventListener("click",(()=>{S.innerHTML="",S.classList.add("hidden")}));const Q=document.querySelector(".buttons-raw__button-new-game"),U=document.querySelector(".buttons-raw__button-new-game-easy"),V=document.querySelector(".buttons-raw__button-results");Q.addEventListener("click",(()=>{if("4x4"===j.innerText)O=n(1e3),O.forEach(((e,n)=>t(n,e))),setTimeout((()=>{L.classList.contains("mute")||s("./Sound_017.wav")}),50);else{i(1e3,G),x.innerHTML="";const e=o(G);x.append(r(G)),d(e),L.classList.contains("mute")||s("./Sound_017.wav"),K=b(e),document.querySelector(".game-field").addEventListener("click",(t=>{const n=t.target.closest("button"),i=Number(n.getAttribute("data-matrix-id")),a=l(i,e),r=l(0,e);!0===u(a,r)&&(h(a,r,e),d(e),L.classList.contains("mute")||s("./Sound_005.wav"),J+=1,F.innerText=J,K=b(e),JSON.stringify(o(m))!==JSON.stringify(e)&&JSON.stringify(o(w))!==JSON.stringify(e)&&JSON.stringify(o(f))!==JSON.stringify(e)&&JSON.stringify(o(p))!==JSON.stringify(e)&&JSON.stringify(o(g))!==JSON.stringify(e)||setTimeout((()=>{y.classList.remove("hidden"),clearTimeout(Y),setTimeout((()=>{y.innerHTML=`Hooray!<br> You solved the puzzle<br> in<br> ${C.textContent} and ${J} moves!`}),500),L.classList.contains("mute")||s("./Sound_025.wav")}),300))}))}J=0,F.innerText=J,clearTimeout(Y),C.textContent="00:00",B()})),U.addEventListener("click",(()=>{if("4x4"===j.innerText)L.classList.contains("mute")||s("./Sound_017.wav"),O=n(20),O.forEach(((e,n)=>t(n,e)));else{switch(j.innerText){case"3x3":G=new Array(9).fill(0).map(((e,t)=>t)).slice(1),G.push(0);break;case"5x5":G=new Array(25).fill(0).map(((e,t)=>t)).slice(1),G.push(0);break;case"6x6":G=new Array(36).fill(0).map(((e,t)=>t)).slice(1),G.push(0);break;case"7x7":G=new Array(49).fill(0).map(((e,t)=>t)).slice(1),G.push(0);break;case"8x8":G=new Array(64).fill(0).map(((e,t)=>t)).slice(1),G.push(0)}i(13,G),x.innerHTML="";const e=o(G);x.append(r(G)),d(e),L.classList.contains("mute")||s("./Sound_017.wav"),K=b(e),document.querySelector(".game-field").addEventListener("click",(t=>{const n=t.target.closest("button"),i=Number(n.getAttribute("data-matrix-id")),a=l(i,e),r=l(0,e);!0===u(a,r)&&(h(a,r,e),d(e),L.classList.contains("mute")||s("./Sound_005.wav"),J+=1,F.innerText=J,K=b(e),JSON.stringify(o(m))!==JSON.stringify(e)&&JSON.stringify(o(w))!==JSON.stringify(e)&&JSON.stringify(o(f))!==JSON.stringify(e)&&JSON.stringify(o(p))!==JSON.stringify(e)&&JSON.stringify(o(g))!==JSON.stringify(e)||setTimeout((()=>{y.classList.remove("hidden"),clearTimeout(Y),setTimeout((()=>{y.innerHTML=`Hooray!<br> You solved the puzzle<br> in<br> ${C.textContent} and ${J} moves!`}),500),L.classList.contains("mute")||s("./Sound_025.wav")}),300))}))}J=0,F.innerText=J,clearTimeout(Y),C.textContent="00:00",B()})),V.addEventListener("click",(()=>{S.classList.remove("hidden");const e=document.createElement("h2");e.classList.add("pop-up-result__caption"),e.innerText="High Score Table",setTimeout((()=>{S.append(e)}),500),"undefined"!==localStorage.getItem(a)&&(E=JSON.parse(localStorage.getItem(a))),setTimeout((()=>{0===E.length?S.innerHTML="No winners yet!":(E.sort(((e,t)=>e[0]-t[0])),E.slice(0,10).forEach(((e,t)=>{const n=document.createElement("div");n.classList.add("winner-name"),n.innerText=`${t+1} ⦁ Player ${e[2]} solved the puzzle in ${e[1]} and ${e[0]} moves `,S.append(n)})))}),500)})),document.querySelector(".buttons-raw__button-save-game").addEventListener("click",(function(){localStorage.setItem("currentState",JSON.stringify(O)),localStorage.setItem("currentMove",JSON.stringify(J)),localStorage.setItem("time",JSON.stringify(C.textContent)),localStorage.setItem("currentStateNoCanvas",JSON.stringify(K))})),document.querySelector(".buttons-raw__button-load-game").addEventListener("click",(function(){if(j.classList.contains("pressed")&&(x.innerHTML="",x.append(T),j.classList.remove("pressed")),localStorage.getItem("currentState")){const e=JSON.parse(localStorage.getItem("time"));O=JSON.parse(localStorage.getItem("currentState")),J=JSON.parse(localStorage.getItem("currentMove")),clearTimeout(Y),C.textContent=e,B(Number(e[3]+e[4]),Number(e[0]+e[1]))}if("4x4"===j.innerText)v.clearRect(0,0,T.width,T.height),O.forEach(((e,n)=>t(n,e))),F.innerText=J;else{const e=JSON.parse(localStorage.getItem("currentStateNoCanvas"));x.innerHTML="",F.innerText=J,x.append(r(e)),d(o(e));const t=o(e),n=document.querySelector(".game-field");n&&n.addEventListener("click",(e=>{const n=e.target.closest("button"),i=Number(n.getAttribute("data-matrix-id")),a=l(i,t),r=l(0,t);!0===u(a,r)&&(h(a,r,t),d(t),L.classList.contains("mute")||s("./Sound_005.wav"),J+=1,F.innerText=J,JSON.stringify(o(m))!==JSON.stringify(t)&&JSON.stringify(o(w))!==JSON.stringify(t)&&JSON.stringify(o(f))!==JSON.stringify(t)&&JSON.stringify(o(p))!==JSON.stringify(t)&&JSON.stringify(o(g))!==JSON.stringify(t)||setTimeout((()=>{y.classList.remove("hidden"),clearTimeout(Y),setTimeout((()=>{y.innerHTML=`Hooray!<br> You solved the puzzle<br> in<br> ${C.textContent} and ${J} moves!`}),500),L.classList.contains("mute")||s("./Sound_025.wav")}),300))}))}})),document.querySelector("footer").append(function(){const e=document.createElement("div");e.classList.add("choose-size");const t=document.createElement("button");t.classList.add("size"),t.innerText="3x3";const n=document.createElement("button");n.classList.add("size"),n.innerText="4x4";const s=document.createElement("button");s.classList.add("size"),s.innerText="5x5";const i=document.createElement("button");i.classList.add("size"),i.innerText="6x6";const a=document.createElement("button");a.classList.add("size"),a.innerText="7x7";const r=document.createElement("button");return r.classList.add("size"),r.innerText="8x8",e.append(t,n,s,i,a,r),e.classList.add("hidden"),e}());const W=document.querySelectorAll(".size"),Z=document.querySelector(".choose-size");j.addEventListener("click",(()=>{j.classList.toggle("pressed"),Z.classList.toggle("hidden")})),W.forEach(((e,t)=>{e.addEventListener("click",(()=>{switch(t){case 0:x.innerHTML="",G=new Array(9).fill(0).map(((e,t)=>t)).slice(1),G.push(0),T.remove(),i(1e3,G),x.append(r(G)),Z.classList.add("hidden"),j.classList.remove("pressed"),j.innerText="3x3",J=0,F.innerText=J,clearTimeout(Y),C.textContent="00:00",B();break;case 1:x.innerHTML="",x.append(T),Z.classList.add("hidden"),j.classList.remove("pressed"),j.innerText="4x4";break;case 2:x.innerHTML="",G=new Array(25).fill(0).map(((e,t)=>t)).slice(1),G.push(0),T.remove(),i(1e3,G),x.append(r(G)),Z.classList.add("hidden"),j.classList.remove("pressed"),j.innerText="5x5",J=0,F.innerText=J,clearTimeout(Y),C.textContent="00:00",B();break;case 3:x.innerHTML="",G=new Array(36).fill(0).map(((e,t)=>t)).slice(1),G.push(0),T.remove(),i(1e3,G),x.append(r(G)),Z.classList.add("hidden"),j.classList.remove("pressed"),j.innerText="6x6",J=0,F.innerText=J,clearTimeout(Y),C.textContent="00:00",B();break;case 4:x.innerHTML="",G=new Array(49).fill(0).map(((e,t)=>t)).slice(1),G.push(0),T.remove(),i(1e3,G),x.append(r(G)),Z.classList.add("hidden"),j.classList.remove("pressed"),j.innerText="7x7",J=0,F.innerText=J,clearTimeout(Y),C.textContent="00:00",B();break;case 5:x.innerHTML="",G=new Array(64).fill(0).map(((e,t)=>t)).slice(1),G.push(0),T.remove(),i(1e3,G),x.append(r(G)),Z.classList.add("hidden"),j.classList.remove("pressed"),j.innerText="8x8",J=0,F.innerText=J,clearTimeout(Y),C.textContent="00:00",B()}const e=o(G);K=b(e);const n=document.querySelector(".game-field");n&&n.addEventListener("click",(t=>{const n=t.target.closest("button"),i=Number(n.getAttribute("data-matrix-id")),a=l(i,e),r=l(0,e);!0===u(a,r)&&(h(a,r,e),d(e),L.classList.contains("mute")||s("./Sound_005.wav"),J+=1,F.innerText=J,K=b(e),JSON.stringify(o(m))!==JSON.stringify(e)&&JSON.stringify(o(w))!==JSON.stringify(e)&&JSON.stringify(o(f))!==JSON.stringify(e)&&JSON.stringify(o(p))!==JSON.stringify(e)&&JSON.stringify(o(g))!==JSON.stringify(e)||setTimeout((()=>{y.classList.remove("hidden"),clearTimeout(Y),setTimeout((()=>{y.innerHTML=`Hooray!<br> You solved the puzzle<br> in<br> ${C.textContent} and ${J} moves!`}),500),L.classList.contains("mute")||s("./Sound_025.wav")}),300))})),d(e)}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,